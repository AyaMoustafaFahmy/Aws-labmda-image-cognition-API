{
  "service": {
    "service": "presigned-url",
    "serviceObject": {
      "name": "presigned-url"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "lambdaHashingVersion": "20201221",
      "profile": "serverless_admin",
      "region": "us-east-1",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:ListBucket",
            "s3:PutObject"
          ],
          "Resource": {
            "Fn::Join": [
              "/",
              [
                {
                  "Fn::GetAtt": [
                    "ImageBucket",
                    "Arn"
                  ]
                },
                "*"
              ]
            ]
          }
        },
        {
          "Effect": "Allow",
          "Action": [
            "rekognition:DetectLabels"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:DescribeStream",
            "dynamodb:GetRecords",
            "dynamodb:ListStreams"
          ],
          "Resource": "*"
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "PresignedUnderscoreurlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/presigned-url-dev-presigned_url"
            }
          },
          "GetUnderscorelabelUnderscorecallbackLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/presigned-url-dev-get_label_callback"
            }
          },
          "GetUnderscorelabelLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/presigned-url-dev-get_label"
            }
          },
          "PresignedUnderscoreurlUnderscorepostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/presigned-url-dev-presigned_url_post"
            }
          },
          "ImageUnderscorerecognitionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/presigned-url-dev-image_recognition"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "presigned-url",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/presigned-url-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/presigned-url-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "MyTable",
                              "StreamArn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "presigned-url",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PresignedUnderscoreurlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/presigned-url.zip"
              },
              "Handler": "presigned.presigned_url",
              "Runtime": "python3.9",
              "FunctionName": "presigned-url-dev-presigned_url",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": {
                    "Ref": "ImageBucket"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PresignedUnderscoreurlLogGroup"
            ]
          },
          "GetUnderscorelabelUnderscorecallbackLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/presigned-url.zip"
              },
              "Handler": "labels.get_label_callback",
              "Runtime": "python3.9",
              "FunctionName": "presigned-url-dev-get_label_callback",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorelabelUnderscorecallbackLogGroup"
            ]
          },
          "GetUnderscorelabelLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/presigned-url.zip"
              },
              "Handler": "labels.get_label",
              "Runtime": "python3.9",
              "FunctionName": "presigned-url-dev-get_label",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorelabelLogGroup"
            ]
          },
          "PresignedUnderscoreurlUnderscorepostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/presigned-url.zip"
              },
              "Handler": "presigned.presigned_url_post",
              "Runtime": "python3.9",
              "FunctionName": "presigned-url-dev-presigned_url_post",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": {
                    "Ref": "ImageBucket"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PresignedUnderscoreurlUnderscorepostLogGroup"
            ]
          },
          "ImageUnderscorerecognitionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/presigned-url.zip"
              },
              "Handler": "img_rek.image_recognition",
              "Runtime": "python3.9",
              "FunctionName": "presigned-url-dev-image_recognition",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ImageUnderscorerecognitionLogGroup"
            ]
          },
          "PresignedUnderscoreurlLambdaVersionX8jymZjhEzU3DRb8jC79dxP0Y4jTBLnva6iywcMAMU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PresignedUnderscoreurlLambdaFunction"
              },
              "CodeSha256": "46BuKTSJSSeKSV8k19BiLGE8xED1Act9jomh94jM9XU="
            }
          },
          "GetUnderscorelabelUnderscorecallbackLambdaVersionPENya1GaDZ1ZFfMSTMEj4PVh8C7Nd6grRWQ5rnt3bY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorelabelUnderscorecallbackLambdaFunction"
              },
              "CodeSha256": "46BuKTSJSSeKSV8k19BiLGE8xED1Act9jomh94jM9XU="
            }
          },
          "GetUnderscorelabelLambdaVersioneiSzfHdUvaTmdZj9oFJuloqk6owK30jbHvSEoaUZY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorelabelLambdaFunction"
              },
              "CodeSha256": "46BuKTSJSSeKSV8k19BiLGE8xED1Act9jomh94jM9XU="
            }
          },
          "PresignedUnderscoreurlUnderscorepostLambdaVersionbSA6nYCSo71qcEnwdQvanLGczZXi5callMYSXp0YY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PresignedUnderscoreurlUnderscorepostLambdaFunction"
              },
              "CodeSha256": "46BuKTSJSSeKSV8k19BiLGE8xED1Act9jomh94jM9XU="
            }
          },
          "ImageUnderscorerecognitionLambdaVersiongep2rCMSxH4dj2Iws94xoTtRotjJIM3QfowKy4E6Pg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ImageUnderscorerecognitionLambdaFunction"
              },
              "CodeSha256": "46BuKTSJSSeKSV8k19BiLGE8xED1Act9jomh94jM9XU="
            }
          },
          "ImageUnderscorerecognitionCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "ImageUnderscorerecognitionLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "presigned-url-dev-image_recognition",
              "BucketName": {
                "Ref": "ImageBucket"
              },
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": []
                }
              ]
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "presigned-url",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              {
                                "Ref": "ImageBucket"
                              }
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z/custom-resources.zip"
              },
              "FunctionName": "presigned-url-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "GetUnderscorelabelUnderscorecallbackEventSourceMappingDynamodbMyTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "MyTable",
                  "StreamArn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorelabelUnderscorecallbackLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON",
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-presigned-url",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "PresignedUnderscoreurlLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PresignedUnderscoreurlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPresignedUnderscoreurl": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PresignedUnderscoreurlLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetImage": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /image",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPresignedUnderscoreurl"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPresignedUnderscoreurl"
          },
          "GetUnderscorelabelLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorelabelLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorelabel": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorelabelLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRouteGetLabelIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /label/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorelabel"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorelabel"
          },
          "PresignedUnderscoreurlUnderscorepostLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PresignedUnderscoreurlUnderscorepostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPresignedUnderscoreurlUnderscorepost": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PresignedUnderscoreurlUnderscorepostLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRoutePostImage": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /image",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPresignedUnderscoreurlUnderscorepost"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPresignedUnderscoreurlUnderscorepost"
          },
          "ImageBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "image-recognition-assessment"
            }
          },
          "MyTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Images",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-ServerlessDeploymentBucketName"
            }
          },
          "PresignedUnderscoreurlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PresignedUnderscoreurlLambdaVersionX8jymZjhEzU3DRb8jC79dxP0Y4jTBLnva6iywcMAMU"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-PresignedUnderscoreurlLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorelabelUnderscorecallbackLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorelabelUnderscorecallbackLambdaVersionPENya1GaDZ1ZFfMSTMEj4PVh8C7Nd6grRWQ5rnt3bY"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-GetUnderscorelabelUnderscorecallbackLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorelabelLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorelabelLambdaVersioneiSzfHdUvaTmdZj9oFJuloqk6owK30jbHvSEoaUZY"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-GetUnderscorelabelLambdaFunctionQualifiedArn"
            }
          },
          "PresignedUnderscoreurlUnderscorepostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PresignedUnderscoreurlUnderscorepostLambdaVersionbSA6nYCSo71qcEnwdQvanLGczZXi5callMYSXp0YY"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-PresignedUnderscoreurlUnderscorepostLambdaFunctionQualifiedArn"
            }
          },
          "ImageUnderscorerecognitionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ImageUnderscorerecognitionLambdaVersiongep2rCMSxH4dj2Iws94xoTtRotjJIM3QfowKy4E6Pg"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-ImageUnderscorerecognitionLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-presigned-url-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-presigned-url-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "presigned_url": {
        "handler": "presigned.presigned_url",
        "environment": {
          "BUCKET_NAME": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PresignedUnderscoreurlLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"BUCKET_NAME\"]"
          }
        },
        "events": [
          {
            "httpApi": {
              "path": "/image",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/image"
          }
        ],
        "name": "presigned-url-dev-presigned_url",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "PresignedUnderscoreurlLambdaVersionX8jymZjhEzU3DRb8jC79dxP0Y4jTBLnva6iywcMAMU"
      },
      "get_label_callback": {
        "handler": "labels.get_label_callback",
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5][\"Resource\"][0]"
              }
            }
          }
        ],
        "name": "presigned-url-dev-get_label_callback",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorelabelUnderscorecallbackLambdaVersionPENya1GaDZ1ZFfMSTMEj4PVh8C7Nd6grRWQ5rnt3bY"
      },
      "get_label": {
        "handler": "labels.get_label",
        "events": [
          {
            "httpApi": {
              "path": "/label/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/label/{id}"
          }
        ],
        "name": "presigned-url-dev-get_label",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorelabelLambdaVersioneiSzfHdUvaTmdZj9oFJuloqk6owK30jbHvSEoaUZY"
      },
      "presigned_url_post": {
        "handler": "presigned.presigned_url_post",
        "environment": {
          "BUCKET_NAME": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PresignedUnderscoreurlUnderscorepostLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"BUCKET_NAME\"]"
          }
        },
        "events": [
          {
            "httpApi": {
              "path": "/image",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/image"
          }
        ],
        "name": "presigned-url-dev-presigned_url_post",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "PresignedUnderscoreurlUnderscorepostLambdaVersionbSA6nYCSo71qcEnwdQvanLGczZXi5callMYSXp0YY"
      },
      "image_recognition": {
        "handler": "img_rek.image_recognition",
        "events": [
          {
            "s3": {
              "bucket": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleCustomResourcesLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][\"Fn::Join\"][1][5]"
              },
              "event": "s3:ObjectCreated:*",
              "existing": true
            }
          }
        ],
        "name": "presigned-url-dev-image_recognition",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "ImageUnderscorerecognitionLambdaVersiongep2rCMSxH4dj2Iws94xoTtRotjJIM3QfowKy4E6Pg"
      }
    },
    "resources": {
      "Resources": {
        "ImageBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "image-recognition-assessment"
          }
        },
        "MyTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Images",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            },
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\I.Yousry\\Downloads\\Staircase - Skills Assessment\\Staircase - Skills Assessment\\1-presigned_url\\.serverless\\presigned-url.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/presigned-url/dev/1632967000872-2021-09-30T01:56:40.872Z",
    "artifact": "presigned-url.zip"
  }
}